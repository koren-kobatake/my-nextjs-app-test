6/12

・next.jsインストール
    npx create-next-app@latest --ts my-nextjs-app

・VSCodeにTailWndの設定を入れる
    "files.associations": {
        "*.css": "tailwindcss"
      }

・「@」のaliasを使用
    ・next.config.mjs
        import path from 'path'

        /** @type {import('next').NextConfig} */
        const nextConfig = {
            webpack: (config, options) => {
            config.resolve.alias['@'] = path.join(process.cwd(), 'app')
            return config
            },
        }
    
    ・tsconfig.json
        "paths": {
            "@/*": ["./app/*"],
        }

・Viteは使う？
    →使わない（APIやReactServerに対応していない、Next.jsに統合可能だがすんなりは行かなそう、使う必要もないし使わなくていいや）

・shadcn-uiインストール
    https://zenn.dev/d2c_mtech_blog/articles/54dfd40120a299
    $ npx shadcn-ui@latest init
        Ok to proceed? (y) y
        ✔ Would you like to use TypeScript (recommended)? … no / yes
        ✔ Which style would you like to use? › Default
        ✔ Which color would you like to use as base color? › Slate
        ✔ Where is your global CSS file? … app/styles/globals.css
        ✔ Would you like to use CSS variables for colors? … no / yes
        ✔ Are you using a custom tailwind prefix eg. tw-? (Leave blank if not) … 
        ✔ Where is your tailwind.config.js located? … tailwind.config.js
        ✔ Configure the import alias for components: … @/components
        ✔ Configure the import alias for utils: … @/lib/utils
        ✔ Are you using React Server Components? … no / yes
        ✔ Write configuration to components.json. Proceed? … yes

・shadcn-uiコンポーネントインストール
    $ npx shadcn-ui add button
    $ npx shadcn-ui add card
    $ npx shadcn-ui add tabs input textarea
    $ npx shadcn-ui add button
    $ npx shadcn-ui add table
        $ npm install @tanstack/react-table
    $ npx shadcn-ui add dropdown-menu
    $ npx shadcn-ui add checkbox
    $ npx shadcn-ui add navigation-menu

    $ npx shadcn-ui add select
    $ npx shadcn-ui add switch
    $ npx shadcn-ui add command
    $ npx shadcn-ui add radio-group
    $ npx shadcn-ui add form
    $ npx shadcn-ui add toast
    $ npx shadcn-ui add calendar
    $ npx shadcn-ui add popover

・mySQLクライアントインストール
    $ npm install mysql2

・API通信ができなかった問題
    appディレクトリ構造を使用している場合、Next.jsのappディレクトリの使用方法が異なります。Next.jsの13以降では、appディレクトリは新しいルーティング構造を提供しますが、APIルートは通常のpagesディレクトリに配置する必要があります。

・セッション管理パッケージインストール
    最適なライブラリが未定（next-auth、iron-session）あとで考える（6/17）
    $ npm install next-auth
    https://mseeeen.msen.jp/nextjs-custom-auth-with-iron-session/


6/17
・URLパラメタ取得方法
  const { searchParams } = new URL(req.url as string);
  const USERID = searchParams.get('USERID');

・ロガー（Pino）
    $ npm install pino pino-pretty
    $ npm install --save-dev @types/pino

・mySQLインストール
    ・DB（testdb）、ユーザ/パス（testuser/testuser）
        $ mysql -u testuser -p
        $ mysql> USE testdb;

・Prismaインストール
    $ npm install @prisma/client
    $ npm install prisma --save-dev
    $ npx prisma init
    $ npx prisma db pull //データベーススキーマのインポート（既存テーブル）
    $ npx prisma generate   //Prismaクライアントの生成
    $ schema.prismaに新規テーブルモデル追加
    $ npx prisma migrate dev --name init  //Prismaのマイグレーション実行

・aws-sdkインストール
    $ npm install aws-sdk


6/18
・next-authインストール
    $ npm install next-auth
    $ npm install jsonwebtoken
    $ npm i --save-dev @types/jsonwebtoken

・ビルド再試行
    $ rm -rf .next
    $ npm run dev